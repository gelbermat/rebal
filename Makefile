# Makefile –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Rebalancer
.PHONY: help install test lint format security docker clean dev

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := poetry run python
PIP := poetry run pip
PYTEST := poetry run pytest
BLACK := poetry run black
ISORT := poetry run isort
FLAKE8 := poetry run flake8
SAFETY := poetry run safety
BANDIT := poetry run bandit

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	poetry install
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

install-dev: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	poetry install --with dev
	@echo "‚úÖ Dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	$(PYTEST) tests/ -v

test-cov: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º
	$(PYTEST) --cov=app --cov-report=term-missing --cov-report=html tests/
	@echo "üìä HTML –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ htmlcov/index.html"

test-fast: ## –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã (–±–µ–∑ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö)
	$(PYTEST) tests/ -m "not slow" -x --tb=short

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	$(BLACK) app/ tests/ utils/
	$(ISORT) app/ tests/ utils/
	@echo "‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω"

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
	$(FLAKE8) app/ tests/ utils/
	@echo "‚úÖ –õ–∏–Ω—Ç–∏–Ω–≥ –ø—Ä–æ–π–¥–µ–Ω"

format-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
	$(BLACK) --check app/ tests/ utils/
	$(ISORT) --check-only app/ tests/ utils/

security: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
	$(SAFETY) check
	$(BANDIT) -r app/ -f json
	@echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"

ci: format lint test-cov security ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ CI –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	$(PYTHON) -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	docker build -t rebalancer:local .
	@echo "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: rebalancer:local"

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	docker run -d \
		--name rebalancer-dev \
		--env-file .env \
		-p 8000:8000 \
		rebalancer:local
	@echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000"

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
	docker stop rebalancer-dev || true
	docker rm rebalancer-dev || true
	@echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker logs -f rebalancer-dev

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
	find . -type f -name "*.pyc" -delete 2>/dev/null || true
	find . -type d -name "*.egg-info" -exec rm -rf {} + 2>/dev/null || true
	rm -rf htmlcov/ .coverage .pytest_cache/ dist/ build/
	@echo "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

deps-update: ## –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	poetry update
	@echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"

deps-audit: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	poetry show --outdated

pre-commit: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pre-commit hook
	cp .git/hooks/pre-commit .git/hooks/pre-commit.bak 2>/dev/null || true
	chmod +x .git/hooks/pre-commit
	@echo "‚úÖ Pre-commit hook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

env-example: ## –°–æ–∑–¥–∞—Ç—å .env –∏–∑ .env.example
	cp .env.example .env
	@echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ .env.example"
	@echo "‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env –ø–æ–¥ –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"

.DEFAULT_GOAL := help